buildscript {
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.1'
    }
}
plugins {
    id 'org.springframework.boot' version '2.4.0-SNAPSHOT'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id "com.google.protobuf" version "0.8.12"
}
apply plugin: 'com.github.johnrengelman.shadow'

group = 'com.ullas'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '14'

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // https://mvnrepository.com/artifact/com.google.protobuf/protobuf-java
    implementation group: 'com.google.protobuf', name: 'protobuf-java', version: '3.11.1'
    implementation group: 'com.google.protobuf', name: 'protobuf-java-util', version: '3.11.1'

    // https://mvnrepository.com/artifact/io.grpc/grpc-all
    implementation group: 'io.grpc', name: 'grpc-all', version: '1.26.0'

    // https://mvnrepository.com/artifact/io.grpc/grpc-services
    implementation group: 'io.grpc', name: 'grpc-services', version: '1.28.0'

    // https://mvnrepository.com/artifact/javax.annotation/javax.annotation-api
    implementation group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'

    implementation 'io.github.lognet:grpc-spring-boot-starter:3.0.0'

// https://mvnrepository.com/artifact/org.apache.tomcat.embed/tomcat-embed-core
    compile group: 'org.apache.tomcat.embed', name: 'tomcat-embed-core', version: '8.5.34'

}

test {
    useJUnitPlatform()
}
sourceSets {
    main {
        java {
            srcDirs 'src/generated/main/java'
            srcDirs 'src/generated/main/grpc'
        }
    }
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.11.2'
    }

    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.26.0'
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
    generatedFilesBaseDir = "$projectDir/src/generated"
}
